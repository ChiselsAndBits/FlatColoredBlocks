plugins {
    id 'fabric-loom'
    id 'com.matthewprenger.cursegradle'
}

project.addCoreProject()

project.dependencies.minecraft "com.mojang:minecraft:${project.minecraftVersion}"
project.dependencies.modImplementation "net.fabricmc:fabric-loader:${project.fabricLoaderVersion}"
project.dependencies.modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabricVersion}+${project.minecraftVersion}"
project.dependencies.modImplementation "com.communi-suggestu.scena:scena-fabric:${project.scenaVersion}"
project.dependencies.modImplementation "com.communi-suggestu.saecularia-caudices:saecularia-caudices-fabric:${project.saeculariaCaudicesVersion}"
project.dependencies.modRuntimeOnly "mod.chiselsandbits:chisels-and-bits-fabric:${project.chiselsAndBitsVersion}"

project.dependencies.include "com.communi-suggestu.scena:scena-fabric:${project.scenaVersion}"
project.dependencies.include "com.communi-suggestu.saecularia-caudices:saecularia-caudices-fabric:${project.saeculariaCaudicesVersion}"

project.dependencies.mappings loom.layered() { layer ->
    layer.officialMojangMappings()
    layer.parchment("org.parchmentmc.data:parchment-${project.parchmentMinecraftVersion}:${project.parchmentVersion}@zip")
}

project.loom.mods.create("flatcoloredblocks", mod -> {
    mod.sourceSet sourceSets.main
    mod.sourceSet(project(":core").sourceSets.main, project(":core"))
})
project.loom.accessWidenerPath = project(':common').file("accesswidener.accesswidener")
project.tasks.processResources.from project(':common').file("accesswidener.accesswidener")
setupResourceProcessing(project.tasks.processResources)

project.remapJar.addNestedDependencies = true

project.loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
}

project.publishToCurseForge(tasks.remapJar)